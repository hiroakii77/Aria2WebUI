FROM debian:stable

# less priviledge user, the id should map the user the downloaded files belongs to
RUN groupadd -r aria && useradd -r -g aria aria -u 1000

# webui + aria2
RUN apt-get update \
        && apt-get install -y busybox curl \
        git \
        make g++ libssl-dev nettle-dev libgmp-dev libssh2-1-dev libc-ares-dev libxml2-dev zlib1g-dev libsqlite3-dev pkg-config libxml2-dev libcppunit-dev autoconf automake autotools-dev autopoint libtool \
        && ARIA2_VERSION="1.36.0" \
        && mkdir aria_build && cd aria_build \
        && curl -L https://github.com/aria2/aria2/releases/download/release-"$ARIA2_VERSION"/aria2-"$ARIA2_VERSION".tar.gz > aria2.tar.gz \
        && tar -xzf aria2.tar.gz \
        && cd aria2-$ARIA2_VERSION \
        && autoreconf -i  && ./configure && make \
        && mv src/aria2c /usr/bin/ \
        && cd ../.. \
        && rm -rf aria_build \
        && apt-get install -y libxml2 libsqlite3-0 libc-ares2 zlib1g \
        && rm -rf /var/lib/apt/lists/*

ADD . /webui-aria2

# gosu install latest
RUN  curl -L "https://github.com/tianon/gosu/releases/download/1.14/gosu-armhf" > /usr/local/bin/gosu \
 && chmod +x /usr/local/bin/gosu

# goland install (compile source code for ARM since no version are currently available)
RUN curl -L "https://storage.googleapis.com/golang/go1.18.3.linux-armv6l.tar.gz" > go.tar.gz \
  && tar -xzf go.tar.gz -C /usr/local \
  && export GOROOT="/usr/local/go" && export GOPATH=`pwd` \
  && $GOROOT/bin/go install github.com/mattn/goreman@latest && $GOROOT/bin/go mod init goreman \
  && rm -rf go.tar.gz 

#\
#  && unset GOROOT && unset GOPATH
# goreman setup
COPY aria2.conf /
RUN echo "web: gosu aria /bin/busybox httpd -f -p 8080 -h /webui-aria2\nbackend: gosu aria /usr/bin/aria2c --conf-path=/aria2.conf" > Procfile

# aria2 downloads directory
VOLUME /data

# aria2 RPC port, map as-is or reconfigure webui
EXPOSE 6800/tcp

# webui static content web server, map wherever is convenient
EXPOSE 8080/tcp

CMD ["start"]
ENTRYPOINT ["goreman"]
